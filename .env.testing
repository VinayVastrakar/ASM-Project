# =====================================
# Asset Management System - TESTING Environment Variables
# =====================================
# üöß FOR DEVELOPMENT AND TESTING ONLY - NOT FOR PRODUCTION üöß

# =====================================
# APPLICATION CONFIGURATION
# =====================================
SPRING_PROFILES_ACTIVE=testing
NODE_ENV=development

# =====================================
# FRONTEND CONFIGURATION (Testing)
# =====================================
FRONTEND_PORT=3000
REACT_APP_API_URL=http://localhost:8080

# =====================================
# BACKEND CONFIGURATION (Testing)
# =====================================
BACKEND_PORT=8080

# =====================================
# DATABASE CONFIGURATION (Testing/Local)
# =====================================
# Local PostgreSQL for testing
POSTGRES_DB=assetdb_testing
POSTGRES_USER=postgres
POSTGRES_PASSWORD=test123
DB_PORT=5432

# Alternative test databases (uncomment as needed)
# POSTGRES_DB=assetdb_test
# POSTGRES_USER=testuser
# POSTGRES_PASSWORD=testpass

# =====================================
# EMAIL CONFIGURATION (Testing)
# =====================================
# Gmail SMTP for testing (use test account)
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=test-email@gmail.com
MAIL_PASSWORD=test-app-password

# =====================================
# BREVO EMAIL API (Testing)
# =====================================
# Use test/sandbox API key for Brevo
BREVO_API_KEY=test-api-key-here
BREVO_SENDER_EMAIL=test@example.com
BREVO_SENDER_NAME=Asset Management App (TEST)
BREVO_ENABLED=false

# =====================================
# JWT CONFIGURATION (Testing)
# =====================================
# Short-lived tokens for testing
JWT_SECRET=testing-secret-key-not-for-production-minimum-256-bits-for-testing-only
JWT_EXPIRATION=3600000
JWT_REFRESH_EXPIRATION=7200000

# =====================================
# GOOGLE OAUTH (Testing)
# =====================================
# Use test OAuth credentials
GOOGLE_CLIENT_ID=test-oauth-client-id.apps.googleusercontent.com

# =====================================
# CLOUDINARY CONFIGURATION (Testing)
# =====================================
# Use test Cloudinary account
CLOUDINARY_CLOUD_NAME=test-cloud-name
CLOUDINARY_API_KEY=test-api-key
CLOUDINARY_API_SECRET=test-api-secret

# =====================================
# CORS CONFIGURATION (Testing)
# =====================================
# Allow local development origins
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080,http://127.0.0.1:3000

# =====================================
# FILE UPLOAD CONFIGURATION (Testing)
# =====================================
SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=10MB
SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=10MB

# =====================================
# LOGGING CONFIGURATION (Testing)
# =====================================
# Verbose logging for debugging
LOGGING_LEVEL_ROOT=DEBUG
LOGGING_LEVEL_COM_EXAMPLE_ASSETS_MANAGEMENT_APP=DEBUG

# =====================================
# INFRASTRUCTURE SERVICES (Testing)
# =====================================
REDIS_PORT=6379
REDIS_PASSWORD=test_redis

PGADMIN_PORT=5050
PGADMIN_EMAIL=test-admin@test.com
PGADMIN_PASSWORD=testadmin

NGINX_PORT=80
NGINX_SSL_PORT=443

# =====================================
# TESTING NOTES
# =====================================
# üîß SETUP INSTRUCTIONS:
# 1. Create test database: createdb assetdb_testing
# 2. Use test email account for SMTP
# 3. Use test/sandbox API keys for external services
# 4. Enable debug logging for troubleshooting
# 5. Use short JWT expiration for testing token refresh
#
# üõ°Ô∏è SECURITY WARNING:
# - Never use these credentials in production
# - Rotate test API keys regularly
# - Use test data only
#
# üìß EMAIL TESTING:
# - Use a dedicated test Gmail account
# - Enable "Less secure app access" for testing
# - Monitor spam folder during testing
#
# üöÄ USAGE:
#   cp .env.testing .env
#   docker-compose -f docker-compose.fullstack.yml up -d
